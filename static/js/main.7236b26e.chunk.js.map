{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","Array","map","x","rowIndex","y","colIndex","renderSquare","React","Component","Game","state","history","fill","position","stepNumber","xIsNext","sortDesc","slice","length","calculateWinner","rowPosition","Math","floor","colPosition","setState","concat","step","status","current","winner","moves","move","desc","jumpTo","reverse","char","one","two","three","style","color","every","sortButtonText","handleClick","display","alignItems","justifyContent","margin","toggleSort","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7236b26e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        key={i}\n        onClick={() => this.props.onClick(i)} \n      />\n    );\n  }\n\n  render() {\n    const numRows = 3, numCols = 3;\n\n    return (\n      <div>\n        {\n          [...new Array(numRows)].map((x, rowIndex) => {\n            return (\n              <div className=\"board-row\" key={rowIndex}>\n                {[...new Array(numCols)].map((y, colIndex) => this.renderSquare(rowIndex * numRows + colIndex))}\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        position: Array(2).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      sortDesc: false,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    let rowPosition = Math.floor(i / 3);\n    let colPosition = i % 3;\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        position: [rowPosition + 1, colPosition + 1]\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    })\n  }\n\n  toggleSort() {\n    this.setState({\n      sortDesc: !this.state.sortDesc\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      let desc = move \n        ? 'Go to move #' + move + ' (' + step.position[0] + ', ' + step.position[1] + ')' \n        : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        desc = <b>{desc}</b>;\n      }\n\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    if (this.state.sortDesc) moves.reverse();\n\n    let status;\n    if (winner) {\n      const [char, one, two, three] = winner;\n      status = 'Winner: ' + char;\n\n      current.squares[one] = <div style={{ color: 'red' }}>{current.squares[one]}</div>;\n      current.squares[two] = <div style={{ color: 'red' }}>{current.squares[two]}</div>;\n      current.squares[three] = <div style={{ color: 'red' }}>{current.squares[three]}</div>;\n      \n    } else if (current.squares.every((i) => i !== null)) {\n      status = \"It's a draw!\";\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    let sortButtonText = 'Sort ' + (this.state.sortDesc ? 'Desc' : 'Asc');\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)} \n          />\n        </div>\n        <div className=\"game-info\">          \n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n          }}>\n            <div>{status}</div>\n            \n          </div>\n          <div\n            style={{\n              margin: 8,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n          }}><button onClick={() => this.toggleSort()}>{sortButtonText}</button></div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      // return squares[a].concat(lines[i]);\n      return Array(1).fill(squares[a]).concat(lines[i]);\n    }\n  }\n\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}